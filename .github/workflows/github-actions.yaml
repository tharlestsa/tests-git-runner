name: Deploy APP_NAME!

run-name: ${{ github.actor }} is running CI/CD pipeline on GitHub Actions

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted]
    environment: prod
    steps:
      - uses: actions/checkout@v2
      
      - name: Verificar Ambiente
        run: echo "Executando no ambiente de produção (prod)"

      - name: Run CI/CD
        run: |
          cd /data/time-series && ./run.sh
          
      - name: Verificar Status do Servidor
        run: echo "Servidor está funcionando corretamente."

      - name: Send Telegram message on pass
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            GitHub Actions CI/CD:

            Application: *APP_NAME*         
            Branch: *${{ github.ref }}*
            Repository: *${{ github.repository }}*
            Owner: *${{ github.repository_owner }}*
            User: *${{ github.actor }}*
            Status: PASS
            Commit: *${{ github.sha }}*
            Commit Message: *${{ github.event.head_commit.message }}*
            Date:  *${{ github.event.head_commit.timestamp }}*

      - name: Send Telegram message on failure
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            GitHub Actions CI/CD:

            Application: *APP_NAME*         
            Branch: *${{ github.ref }}*
            Repository: *${{ github.repository }}*
            Owner: *${{ github.repository_owner }}*
            User: *${{ github.actor }}*
            Status: FAILED
            Commit: *${{ github.sha }}*
            Failure Message: *${{steps.run_script.outcome}}*
            Date:  *${{ github.event.head_commit.timestamp }}*
